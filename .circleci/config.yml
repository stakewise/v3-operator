version: 2.1

orbs:
  python: circleci/python@1.2.0
  win: circleci/windows@2.2.0

executors:
  linux-amd64:
    docker:
      - image: cimg/python:3.10
  linux-arm64:
    docker:
      - image: cimg/python:3.10
    resource_class: arm.medium
  macos:
    macos:
      xcode: 13.4.1

commands:
  build_and_compress:
    parameters:
      os_name:
        type: string
      os_arch:
        type: string
      python_version:
        type: string
      build_file_name:
        type: string
    steps:
      - run:
          name: Build executable for << parameters.os_name >>
          command: |
            git rev-parse --short HEAD > GIT_SHA
            export PYTHONHASHSEED=42
            export CIRCLE_SHORT_SHA1=$(eval echo $CIRCLE_SHA1 | cut -c -7)
            export BUILD_FILE_NAME=<< parameters.build_file_name >>-${CIRCLE_TAG}-<< parameters.os_name >>-<< parameters.os_arch >>
            mkdir $BUILD_FILE_NAME
            poetry run pyinstaller --distpath ./$BUILD_FILE_NAME ./operator.spec
            tar -zcvf $BUILD_FILE_NAME.tar.gz $BUILD_FILE_NAME
            mkdir /tmp/artifacts
            cp $BUILD_FILE_NAME.tar.gz /tmp/artifacts
            sha256sum $BUILD_FILE_NAME.tar.gz | head -c 64 > /tmp/artifacts/$BUILD_FILE_NAME.sha256

jobs:
  build-linux-amd64:
    executor: linux-amd64
    steps:
      - checkout
      - run:
          name: Install python
          command: |
            curl -sSL https://install.python-poetry.org | POETRY_UNINSTALL=1 python3 -
            curl -sSL https://install.python-poetry.org | python3 -
            poetry install --no-root --no-interaction
      - build_and_compress:
          os_name: linux
          os_arch: amd64
          python_version: "3.10.13"
          build_file_name: operator
      - store_artifacts:
          path: /tmp/artifacts

  build-linux-arm64:
    executor: linux-arm64
    steps:
      - checkout
      - run:
          name: Install python
          command: |
            curl -sSL https://install.python-poetry.org | POETRY_UNINSTALL=1 python3 -
            curl -sSL https://install.python-poetry.org | python3 -
            poetry install --no-root --no-interaction
      - build_and_compress:
          os_name: linux
          os_arch: arm64
          python_version: "3.10.13"
          build_file_name: operator
      - store_artifacts:
          path: /tmp/artifacts

  build-macos:
    executor: macos
    steps:
      - checkout
      - run:
          name: Install python
          command: |
            brew install pyenv;
            pyenv install 3.10.13;
            pyenv global 3.10.13;
            python3 --version;
            curl -sSL https://install.python-poetry.org | python3 -;
            python3 -m poetry install --no-interaction --no-root;
      - build_and_compress:
          os_name: macos
          os_arch: amd64
          python_version: "3.10.13"
          build_file_name: operator
      - store_artifacts:
          path: /tmp/artifacts

  build-windows:
    executor:
      name: win/default
      shell: powershell.exe
      size: large
    steps:
      - checkout
      - run:
          name: Install python
          command: |
            choco install python --version=3.10.11;
            pip install poetry;
            poetry install --no-interaction --no-root;
      - run:
          name: Build executable for Windows
          command: |
            $PYTHONHASHSEED = 42
            $CIRCLE_SHORT_SHA1 = $env:CIRCLE_SHA1.substring(0,7)
            $BUILD_FILE_NAME = "operator-" + $CIRCLE_SHORT_SHA1 + "-windows-amd64"
            mkdir $BUILD_FILE_NAME
            pyinstaller --distpath ./$BUILD_FILE_NAME ./operator.spec
            Compress-Archive -Path $BUILD_FILE_NAME -DestinationPath $BUILD_FILE_NAME.zip
            mkdir \tmp\artifacts
            copy $BUILD_FILE_NAME.zip \tmp\artifacts
            $CHECKSUM_FILE_NAME = "\tmp\artifacts\" + $BUILD_FILE_NAME + ".sha256"
            certUtil -hashfile $BUILD_FILE_NAME.zip SHA256 | findstr /i /v "SHA256" | findstr /i /v "CertUtil" > $CHECKSUM_FILE_NAME
      - store_artifacts:
          path: /tmp/artifacts

workflows:
  version: 2
  build:
    jobs:
      - build-linux-amd64:
          filters:
            tags:
              only: /^v.*/
      - build-linux-arm64:
          filters:
            tags:
              only: /^v.*/
      # - build-macos:
      #     filters:
      #       tags:
      #         only: /^v.*/
      # - build-windows:
      #     filters:
      #       tags:
      #         only: /^v.*/
