# Address of the vault to register validators for
VAULT=0x123...

# API endpoint for the execution node
EXECUTION_ENDPOINTS=http://localhost:8545

# API endpoint for the consensus node
CONSENSUS_ENDPOINTS=http://localhost:3500

# Enable debug mode. Default is false.
# VERBOSE=false

# Whether to submit vault harvest transactions. Default is false.
# HARVEST_VAULT=false

# Maximum fee per gas limit for transactions. Default is 10 Gwei.
# MAX_FEE_PER_GAS_GWEI=10

# Prometheus server host and port. Default is 127.0.0.1:9100
# ENABLE_METRICS=false
# METRICS_HOST=127.0.0.1
# METRICS_PORT=9100

# The network of the Vault. Choices are: mainnet, gnosis, hoodi, chiado
# Default value will be taken from vault config
# NETWORK=mainnet

# Path where the keystores and config data will be placed
# Default is ~/.stakewise/
# DATA_DIR=/home/user/.stakewise/

# The directory where the database will be created or read from
# Default is ${DATA_DIR}/${VAULT}/database
# DATABASE_DIR=/home/user/.stakewise/${VAULT}/database

# Absolute path to the directory with all the encrypted keystores
# Default is ${DATA_DIR}/${VAULT}/keystores
# KEYSTORES_DIR=/home/user/.stakewise/${VAULT}/keystores

# Absolute path to the password file for decrypting keystores
# Default is ${DATA_DIR}/${VAULT}/keystores/password.txt
# KEYSTORES_PASSWORD_FILE=/home/user/.stakewise/${VAULT}/keystores/password.txt

# If your keystores are encrypted with different passwords, you can provide a directory with password files.
# The password file name should be the same as the keystore file name, but with .txt extension.
# KEYSTORES_PASSWORD_DIR=/home/user/.stakewise/${VAULT}/keystores

# URL to the remote signer. Default is None - using local keystores.
# REMOTE_SIGNER_URL=http://remote-signer:9000

# URL to the hashi vault. Default is None - using local keystores or remote signer.
# HASHI_VAULT_URL=http://vault:8200
# Authentication token for Hashi vault. Since the token is used only once on
# application start, it does not need to be long-lived, however application
# need to be able to re-acquire it after restart
# HASHI_VAULT_TOKEN=<vault token>
# A key path in the K/V secret engine that holds signing keys.
# Internal structure of the secret must hold public validator keys in hex form without 0x as
# secret keys, and signing keys in hex form without 0x prefix  as secret vault.
# HASHI_VAULT_KEY_PATH=path/inside/hashi/vault/k/v/engine
# A prefix in the K/V secret engine common for a group of signing keys.
# Internal structure of keys under prefix must be as follows:
# <prefix>/<public_key_hex_value_without_0x> -- {"<any_key>": "<secret_key_hex_value_without_0x>"}
# "<any_key>" can be any key value like 'value' or 'key', the public key will be discovered
# from the prefix anyway.
# HASHI_VAULT_KEY_PREFIX=path/inside/hashi/vault/k/v/engine

# Relayer endpoint for api mode. Default is None - using local keystores.
# RELAYER_ENDPOINT=http://localhost:8080

# Type of the validators to register: 0x01 or 0x02
# Default is 0x02
# VALIDATOR_TYPE=0x02

# Claim fee splitter rewards periodically on behalf of the shareholders.
# Default is False
# CLAIM_FEE_SPLITTER=false
# FEE_SPLITTER_INTERVAL=86400
# FEE_SPLITTER_MIN_ASSETS=1000000000000000

# Disable new validator registrations and funding for registered validators.
# Default is False
# DISABLE_VALIDATOR_REGISTRATIONS=false

# Disable submitting validator withdrawals through the vault contract.
# Default is False
# DISABLE_WITHDRAWALS=false

# Minimum amount in gwei to deposit into compounding validator.
# Default is 10 ETH in gwei (10 * 10**9)
# MIN_DEPOSIT_AMOUNT_GWEI=10000000000

# Minimum delay for validator funding in seconds.
# Default is 3600 (1 hour)
# MIN_DEPOSIT_DELAY=3600

# Path to the wallet keystore and password files
# Default is ${DATA_DIR}/${NETWORK}/wallet/wallet.json
# WALLET_FILE=/home/user/.stakewise/${NETWORK}/wallet/wallet.json
# Default is ${DATA_DIR}/${NETWORK}/wallet/password.txt
# WALLET_PASSWORD_FILE=/home/user/.stakewise/${NETWORK}/wallet/password.txt

# Log level
# LOG_LEVEL=INFO
# Log record format. Can be "plain" or "json". Default is "plain"
# LOG_FORMAT=plain
